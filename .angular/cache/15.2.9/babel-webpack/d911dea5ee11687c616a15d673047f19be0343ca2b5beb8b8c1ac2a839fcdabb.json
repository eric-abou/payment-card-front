{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/payment-detail.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/forms\";\nexport class PaymentDetailFormComponent {\n  constructor(paymentService, toastr) {\n    this.paymentService = paymentService;\n    this.toastr = toastr;\n  }\n  onSubmit(form) {\n    this.paymentService.formSubmitted = true;\n    if (form.valid) {\n      if (this.paymentService.formData.paymentId == 0) this.insertRecord(form);else this.updateRecord(form);\n    }\n  }\n  insertRecord(form) {\n    this.paymentService.postPayment().subscribe({\n      next: res => {\n        this.paymentService.list = res;\n        this.paymentService.resetForm(form);\n        this.toastr.info('Updated Successfully !', 'Payment Card');\n        //console.log(res);\n      },\n\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  updateRecord(form) {\n    this.paymentService.putPayment().subscribe({\n      next: res => {\n        this.paymentService.list = res;\n        this.paymentService.resetForm(form);\n        this.toastr.info('Updated successfully!', 'Payment Card');\n        //console.log(res);\n      },\n\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n}\n_class = PaymentDetailFormComponent;\n_class.ɵfac = function PaymentDetailFormComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.PaymentDetailService), i0.ɵɵdirectiveInject(i2.ToastrService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-payment-detail-form\"]],\n  decls: 27,\n  vars: 7,\n  consts: [[\"novalidate\", \"\", \"autocomplete\", \"off\", 3, \"submit\"], [\"form\", \"ngForm\"], [\"type\", \"hidden\", \"name\", \"paymentId\", 3, \"value\"], [1, \"mb-3\"], [\"for\", \"cardOwnerName\"], [\"placeholder\", \"Name on Card\", \"type\", \"text\", \"name\", \"cardOwnerName\", \"id\", \"cardOwnerName\", \"required\", \"\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"ngModelChange\"], [\"cardOwnerName\", \"ngModel\"], [\"for\", \"cardNumber\"], [\"placeholder\", \"16 digit card number\", \"type\", \"text\", \"name\", \"cardNumber\", \"id\", \"cardNumber\", \"minlength\", \"16\", \"maxlength\", \"16\", \"required\", \"\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"ngModelChange\"], [\"cardNumber\", \"ngModel\"], [1, \"row\"], [1, \"mb-3\", \"col-6\"], [\"for\", \"expirationDate\"], [\"placeholder\", \"MM/YY\", \"type\", \"text\", \"name\", \"expirationDate\", \"id\", \"expirationDate\", \"required\", \"\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"ngModelChange\"], [\"expirationDate\", \"ngModel\"], [\"for\", \"securityCode\"], [\"placeholder\", \"CVV\", \"type\", \"password\", \"name\", \"securityCode\", \"id\", \"securityCode\", \"minlength\", \"3\", \"maxlength\", \"3\", \"required\", \"\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"ngModelChange\"], [\"securityCode\", \"ngModel\"], [1, \"d-grid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-lg\", \"btn-success\"]],\n  template: function PaymentDetailFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r5 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵlistener(\"submit\", function PaymentDetailFormComponent_Template_form_submit_0_listener() {\n        i0.ɵɵrestoreView(_r5);\n        const _r0 = i0.ɵɵreference(1);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelement(2, \"input\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\", 4);\n      i0.ɵɵtext(5, \"Card Owner Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 5, 6);\n      i0.ɵɵlistener(\"ngModelChange\", function PaymentDetailFormComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.paymentService.formData.cardOwnerName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 7);\n      i0.ɵɵtext(10, \"Card Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 8, 9);\n      i0.ɵɵlistener(\"ngModelChange\", function PaymentDetailFormComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.paymentService.formData.cardNumber = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 10)(14, \"div\", 11)(15, \"label\", 12);\n      i0.ɵɵtext(16, \"Valid\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 13, 14);\n      i0.ɵɵlistener(\"ngModelChange\", function PaymentDetailFormComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.paymentService.formData.expirationDate = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 11)(20, \"label\", 15);\n      i0.ɵɵtext(21, \"Security Code\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"input\", 16, 17);\n      i0.ɵɵlistener(\"ngModelChange\", function PaymentDetailFormComponent_Template_input_ngModelChange_22_listener($event) {\n        return ctx.paymentService.formData.securityCode = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(24, \"div\", 18)(25, \"button\", 19);\n      i0.ɵɵtext(26, \" Submit \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"submitted\", ctx.paymentService.formSubmitted);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", ctx.paymentService.formData.paymentId);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.paymentService.formData.cardOwnerName);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.paymentService.formData.cardNumber);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.paymentService.formData.expirationDate);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.paymentService.formData.securityCode);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.MinLengthValidator, i3.MaxLengthValidator, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;AAWA,OAAM,MAAOA,0BAA0B;EAErCC,YAAmBC,cAAoC,EAAUC,MAAqB;IAAnE,mBAAc,GAAdD,cAAc;IAAgC,WAAM,GAANC,MAAM;EAAmB;EAE1FC,QAAQ,CAACC,IAAY;IACnB,IAAI,CAACH,cAAc,CAACI,aAAa,GAAG,IAAI;IACxC,IAAID,IAAI,CAACE,KAAK,EAAE;MACd,IAAI,IAAI,CAACL,cAAc,CAACM,QAAQ,CAACC,SAAS,IAAI,CAAC,EAC7C,IAAI,CAACC,YAAY,CAACL,IAAI,CAAC,CAAC,KAExB,IAAI,CAACM,YAAY,CAACN,IAAI,CAAC;;EAE7B;EAEAK,YAAY,CAACL,IAAY;IACvB,IAAI,CAACH,cAAc,CAACU,WAAW,EAAE,CAACC,SAAS,CAAC;MAC1CC,IAAI,EAAEC,GAAG,IAAG;QACV,IAAI,CAACb,cAAc,CAACc,IAAI,GAAGD,GAAsB;QACjD,IAAI,CAACb,cAAc,CAACe,SAAS,CAACZ,IAAI,CAAC;QACnC,IAAI,CAACF,MAAM,CAACe,IAAI,CAAC,wBAAwB,EAAE,cAAc,CAAC;QAC1D;MACF,CAAC;;MACDC,KAAK,EAAEC,GAAG,IAAG;QACXC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;KACD,CAAC;EACJ;EAEAT,YAAY,CAACN,IAAY;IACvB,IAAI,CAACH,cAAc,CAACqB,UAAU,EAAE,CAC7BV,SAAS,CAAC;MACTC,IAAI,EAAEC,GAAG,IAAG;QACV,IAAI,CAACb,cAAc,CAACc,IAAI,GAAGD,GAAsB;QACjD,IAAI,CAACb,cAAc,CAACe,SAAS,CAACZ,IAAI,CAAC;QACnC,IAAI,CAACF,MAAM,CAACe,IAAI,CAAC,uBAAuB,EAAE,cAAc,CAAC;QACzD;MACF,CAAC;;MACDC,KAAK,EAAEC,GAAG,IAAG;QACXC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;KACD,CAAC;EAEN;;SA1CWpB,0BAA0B;;mBAA1BA,MAA0B;AAAA;;QAA1BA,MAA0B;EAAAwB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCXvCC,kCACuB;MADFA;QAAAA;QAAA;QAAA,OAAUA,gCAAc;MAAA,EAAC;MAE1CA,2BAAoF;MACpFA,8BAAkB;MACaA,+BAAe;MAAAA,iBAAQ;MAClDA,mCAC2G;MAAlFA;QAAA;MAAA,EAAmD;MAD5EA,iBAC2G;MAG/GA,8BAAkB;MACUA,4BAAW;MAAAA,iBAAQ;MAC3CA,oCAE8B;MADRA;QAAA;MAAA,EAAgD;MADtEA,iBAE8B;MAGlCA,gCAAiB;MAEmBA,sBAAK;MAAAA,iBAAQ;MACzCA,sCAEe;MADWA;QAAA;MAAA,EAAoD;MAD9EA,iBAEe;MAGnBA,gCAAwB;MACMA,8BAAa;MAAAA,iBAAQ;MAC/CA,sCAE6B;MADLA;QAAA;MAAA,EAAkD;MAD1EA,iBAE6B;MAKrCA,gCAAoB;MAEZA,yBACJ;MAAAA,iBAAS;;;MApC8BA,6DAAgD;MAErDA,eAA2C;MAA3CA,6DAA2C;MAIpDA,eAAmD;MAAnDA,mEAAmD;MAMtDA,eAAgD;MAAhDA,gEAAgD;MAQxCA,eAAoD;MAApDA,oEAAoD;MAOtDA,eAAkD;MAAlDA,kEAAkD","names":["PaymentDetailFormComponent","constructor","paymentService","toastr","onSubmit","form","formSubmitted","valid","formData","paymentId","insertRecord","updateRecord","postPayment","subscribe","next","res","list","resetForm","info","error","err","console","log","putPayment","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["D:\\projet\\payment-card-app\\payment-card-app\\src\\app\\PaymentDetails\\payment-detail-form\\payment-detail-form.component.ts","D:\\projet\\payment-card-app\\payment-card-app\\src\\app\\PaymentDetails\\payment-detail-form\\payment-detail-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { PaymentDetail } from 'src/app/shared/payment-detail';\nimport { PaymentDetailService } from 'src/app/shared/payment-detail.service';\n\n@Component({\n  selector: 'app-payment-detail-form',\n  templateUrl: './payment-detail-form.component.html',\n  styleUrls: ['./payment-detail-form.component.css']\n})\nexport class PaymentDetailFormComponent {\n\n  constructor(public paymentService: PaymentDetailService, private toastr: ToastrService) { }\n\n  onSubmit(form: NgForm) {\n    this.paymentService.formSubmitted = true;\n    if (form.valid) {\n      if (this.paymentService.formData.paymentId == 0)\n        this.insertRecord(form);\n      else\n        this.updateRecord(form);\n    }\n  }\n\n  insertRecord(form: NgForm) {\n    this.paymentService.postPayment().subscribe({\n      next: res => {\n        this.paymentService.list = res as PaymentDetail[]\n        this.paymentService.resetForm(form);\n        this.toastr.info('Updated Successfully !', 'Payment Card');\n        //console.log(res);\n      },\n      error: err => {\n        console.log(err);\n      }\n    })\n  }\n\n  updateRecord(form: NgForm) {\n    this.paymentService.putPayment()\n      .subscribe({\n        next: res => {\n          this.paymentService.list = res as PaymentDetail[]\n          this.paymentService.resetForm(form);\n          this.toastr.info('Updated successfully!', 'Payment Card');\n          //console.log(res);\n        },\n        error: err => {\n          console.log(err);\n        }\n      })\n\n  }\n}\n","<form #form=\"ngForm\" (submit)=\"onSubmit(form)\" [class.submitted]=\"paymentService.formSubmitted\" novalidate\n    autocomplete=\"off\">\n    <input type=\"hidden\" name=\"paymentId\" [value]=\"paymentService.formData.paymentId\" />\n    <div class=\"mb-3\">\n        <label for=\"cardOwnerName\">Card Owner Name</label>\n        <input class=\"form-control form-control-lg\" placeholder=\"Name on Card\" type=\"text\" #cardOwnerName=\"ngModel\"\n            name=\"cardOwnerName\" [(ngModel)]=\"paymentService.formData.cardOwnerName\" id=\"cardOwnerName\" required />\n    </div>\n\n    <div class=\"mb-3\">\n        <label for=\"cardNumber\">Card Number</label>\n        <input class=\"form-control form-control-lg\" placeholder=\"16 digit card number\" type=\"text\" #cardNumber=\"ngModel\"\n            name=\"cardNumber\" [(ngModel)]=\"paymentService.formData.cardNumber\" id=\"cardNumber\" minlength=\"16\"\n            maxlength=\"16\" required />\n    </div>\n\n    <div class=\"row\">\n        <div class=\"mb-3 col-6\">\n            <label for=\"expirationDate\">Valid</label>\n            <input class=\"form-control form-control-lg\" placeholder=\"MM/YY\" type=\"text\" #expirationDate=\"ngModel\"\n                name=\"expirationDate\" [(ngModel)]=\"paymentService.formData.expirationDate\" id=\"expirationDate\"\n                required />\n        </div>\n\n        <div class=\"mb-3 col-6\">\n            <label for=\"securityCode\">Security Code</label>\n            <input class=\"form-control form-control-lg\" placeholder=\"CVV\" type=\"password\" #securityCode=\"ngModel\"\n                name=\"securityCode\" [(ngModel)]=\"paymentService.formData.securityCode\" id=\"securityCode\" minlength=\"3\"\n                maxlength=\"3\" required />\n        </div>\n    </div>\n\n\n    <div class=\"d-grid\">\n        <button class=\"btn btn-lg btn-success\" type=\"submit\">\n            Submit\n        </button>\n    </div>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}